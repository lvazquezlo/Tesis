y = "",
fill = "Color")
df.aventurate %>%
#  filter(Estado != "Nuevo Leon") %>%
group_by(Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ungroup() %>%
mutate(Estado = fct_reorder(Estado, n_boletos)) %>%
ggplot(aes(n_boletos, Estado, fill = campus)) +
geom_col() +
scale_x_continuous(labels = comma) +
labs(title = "Número de boletos vendidos entre 2015 y 2019",
subtitle = "Sorteo: Aventúrate",
x = "Boletos Vendidos",
y = "",
fill = "Color")
df.educativo %>%
group_by(Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ungroup() %>%
mutate(Estado = fct_reorder(Estado, n_boletos)) %>%
ggplot(aes(n_boletos, Estado, fill = campus)) +
geom_col() +
scale_x_continuous(labels = comma) +
labs(title = "Número de boletos vendidos (2015 - 2019)",
subtitle = "Sorteo: Educativo",
x = "Boletos Vendidos",
y = "",
fill = "Campus")
df.sueno %>%
group_by(Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ungroup() %>%
mutate(Estado = fct_reorder(Estado, n_boletos)) %>%
ggplot(aes(n_boletos, Estado, fill = campus)) +
geom_col() +
scale_x_continuous(labels = comma) +
labs(title = "Número de boletos vendidos (2015 - 2019)",
subtitle = "Sorteo: Mi Sueño",
x = "Boletos Vendidos",
y = "",
fill = "Campus")
df.tradicional %>%
group_by(Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ungroup() %>%
mutate(Estado = fct_reorder(Estado, n_boletos)) %>%
ggplot(aes(n_boletos, Estado, fill = campus)) +
geom_col() +
scale_x_continuous(labels = comma) +
labs(title = "Número de boletos vendidos (2015 - 2019)",
subtitle = "Sorteo: Tradicional",
x = "Boletos Vendidos",
y = "",
fill = "Campus")
mayores_boletos <- function(df){
df %>%
group_by(Estado) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ungroup() %>%
slice_max(order_by = n_boletos, n = 15) %>%
pull(Estado) %>%
as.character()
}
df.aventurate %>%
filter(Estado %in% mayores_boletos(df.aventurate)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Aventúrate",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.educativo %>%
filter(Estado %in% mayores_boletos(df.educativo)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Educativo",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.tradicional
df.aventurate %>%
select(Venta_Estado, Pib_perCap_aven, campus) %>%
mutate(campus = if_else(campus == "Si", 1, 0)) %>%
rename(n_boletos = Venta_Estado, pib_pc = Pib_perCap_aven) %>%
cor() %>%
ggcorrplot(ggtheme = theme_light(),
lab = TRUE,
colors = c("#E46726", "white", "#6D9EC1")) +
labs(title = "Matriz de correlación")
df.aventurate
df.aventurate %>%
ggplot(aes(Pib_perCap_aven, Venta_Estado)) +
geom_point()
df.aventurate %>%
ggplot(aes(Pib_perCap_aven, Venta_Estado)) +
scale_x_log10() +
scale_y_log10() +
geom_point()
df.aventurate %>%
ggplot(aes(log(Pib_perCap_aven), log(Venta_Estado))) +
geom_point()
df.aventurate %>%
ggplot(aes(Pib_perCap_aven, Venta_Estado)) +
geom_point() +
geom_smooth(method = "lm")
df.aventurate %>%
ggplot(aes(log(Pib_perCap_aven), log(Venta_Estado))) +
geom_point() +
geom_smooth()
df.aventurate %>%
ggplot(aes(log(Pib_perCap_aven), log(Venta_Estado))) +
geom_point() +
geom_smooth(method = "lm")
df.tradicional %>%
filter(Estado %in% mayores_boletos(df.tradicional)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Tradicional",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.sueno %>%
filter(Estado %in% mayores_boletos(df.sueno)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Mi Sueño",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.educativo %>%
filter(Estado %in% mayores_boletos(df.educativo)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Educativo",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
group_by(Sorteo, Fecha) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Sorteo, scales = "free_y") +
labs(x = "",
y = "Boletos Vendidos",
title = "Serie de boletos vendidos",
subtitle = "entre 2015 y 2019")
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+"),
Sorteo = str_to_title(Sorteo)) %>%
group_by(Sorteo) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
mutate(Sorteo = fct_reorder(Sorteo, n_boletos)) %>%
ggplot(aes(n_boletos, Sorteo)) +
geom_point(col = "tomato2", size = 3) +
geom_segment(aes(x = min(n_boletos),
xend = max(n_boletos),
y = Sorteo,
yend = Sorteo),
linetype = "dashed",
size = 0.1) +
scale_x_continuous(labels = comma) +
theme_classic() +
labs(title = "Total de boletos vendidos por sorteo ",
subtitle = "entre 2015 y 2019",
x = "Número de boletos",
y = "")
df.aventurate
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven))
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven)) %>%
slice_max(order_by = avg_pib_pc, n = 10)
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven)) %>%
slice_max(order_by = avg_pib_pc, n = 10)
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(contains("pc"))) %>%
slice_max(order_by = avg_pib_pc, n = 10)
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven)) %>%
slice_max(order_by = avg_pib_pc, n = 10)
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven)) %>%
slice_max(order_by = avg_pib_pc, n = 10) %>%
pull(Estado)
df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven)) %>%
slice_max(order_by = avg_pib_pc, n = 10) %>%
ungroup() %>%
pull(Estado)
estados_avg_max_ppc <- df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(Pib_perCap_aven)) %>%
slice_max(order_by = avg_pib_pc, n = 10) %>%
ungroup() %>%
pull(Estado)
df.aventurate
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = Venta_Estado)) +
geom_line(aes(y = Pib_perCap_aven))
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(y = Venta_Estado)) +
geom_line(aes(y = Pib_perCap_aven)) +
facet_wrap(~ Estado, scales = "free_y")
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(x = Fecha)) +
geom_line(aes(x = Pib_perCap_aven, y = Venta_Estado)) +
facet_wrap(~ Estado, scales = "free_y")
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(x = Fecha)) +
geom_point(aes(x = Pib_perCap_aven, y = Venta_Estado)) +
facet_wrap(~ Estado, scales = "free_y")
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc)
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(Pib_perCap_aven, Venta_Estado, col = Estado)) +
geom_point()
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(log(Pib_perCap_aven), log(Venta_Estado), col = Estado)) +
geom_point()
df.aventurate
df.aventurate %>%
rename(pib_pc = Pib_perCap_aven,
pib = Pib_aven)
df.aventurate <- tablas[[2]] %>%
left_join(sedes_tec, by = c("Estado" = "value")) %>%
mutate(campus = if_else(is.na(campus), "No", campus),
ID = as.factor(ID),
Fecha = ymd(Fecha),
Sorteo = make_clean_names(Sorteo),
Sorteo = str_replace_all(Sorteo, "[\\_]", " "),
Sorteo = str_to_title(Sorteo)) %>%
rename(pib_pc = Pib_perCap_aven,
pib = Pib_aven) %>%
ungroup()
df.aventurate
df.educativo
df.educativo <- tablas[[1]] %>%
left_join(sedes_tec, by = c("Estado" = "value")) %>%
mutate(campus = if_else(is.na(campus), "No", campus),
ID = as.factor(ID),
Fecha = ymd(Fecha),
Sorteo = make_clean_names(Sorteo),
Sorteo = str_replace_all(Sorteo, "[\\_]", " "),
Sorteo = str_to_title(Sorteo)) %>%
rename(pib_pc = Pib_perCap_educ,
pib = Pib_educ) %>%
ungroup()
df.educativo
df.sueno
df.sueno <- tablas[[3]] %>%
left_join(sedes_tec, by = c("Estado" = "value")) %>%
mutate(campus = if_else(is.na(campus), "No", campus),
ID = as.factor(ID),
Fecha = ymd(Fecha),
Sorteo = make_clean_names(Sorteo),
Sorteo = str_replace_all(Sorteo, "[\\_]", " "),
Sorteo = str_to_title(Sorteo)) %>%
rename(pib_pc = Pib_perCap_suen,
pib = Pib_suen) %>%
ungroup()
df.sueno
df.tradicional
df.tradicional <- tablas[[4]] %>%
left_join(sedes_tec, by = c("Estado" = "value")) %>%
mutate(campus = if_else(is.na(campus), "No", campus),
ID = as.factor(ID),
Fecha = ymd(Fecha),
Sorteo = make_clean_names(Sorteo),
Sorteo = str_replace_all(Sorteo, "[\\_]", " "),
Sorteo = str_to_title(Sorteo)) %>%
rename(pib_pc = Pib_perCap_trad,
pib = Pib_trad) %>%
ungroup()
df.tradicional
df.global
df.global <- tablas[[5]] %>%
left_join(sedes_tec, by = c("Estado" = "value")) %>%
mutate(campus = if_else(is.na(campus), "No", campus),
ID = as.factor(ID),
Fecha = ymd(Fecha),
Sorteo = make_clean_names(Sorteo),
Sorteo = str_replace_all(Sorteo, "[\\_]", " "),
Sorteo = str_to_title(Sorteo)) %>%
rename(pib_pc = Pib_trad,
pib = Pib) %>%
ungroup()
estados_avg_max_ppc <- df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(pib_pc)) %>%
slice_max(order_by = avg_pib_pc, n = 10) %>%
ungroup() %>%
pull(Estado)
df.global
df.global <- tablas[[5]] %>%
left_join(sedes_tec, by = c("Estado" = "value")) %>%
mutate(campus = if_else(is.na(campus), "No", campus),
ID = as.factor(ID),
Fecha = ymd(Fecha),
Sorteo = make_clean_names(Sorteo),
Sorteo = str_replace_all(Sorteo, "[\\_]", " "),
Sorteo = str_to_title(Sorteo)) %>%
rename(pib_pc = Pib_perCap,
pib = Pib) %>%
ungroup()
df.global
estados_avg_max_ppc <- df.aventurate %>%
group_by(Estado) %>%
summarise(avg_pib_pc = mean(pib_pc)) %>%
slice_max(order_by = avg_pib_pc, n = 10) %>%
ungroup() %>%
pull(Estado)
df.aventurate %>%
filter(Estado %in% estados_avg_max_ppc) %>%
ggplot(aes(log(pib_pc), log(Venta_Estado), col = Estado)) +
geom_point()
df.global
df.global %>%
group_by(Fecha) %>%
ggplot(aes(Fecha, pib_pc)) +
geom_line()
df.global %>%
distinct(Fecha, .keep_all = TRUE) %>%
ggplot(aes(Fecha, pib_pc)) +
geom_line()
df.tradicional %>%
filter(Estado %in% mayores_boletos(df.tradicional)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Tradicional",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.global %>%
distinct(Fecha, .keep_all = TRUE) %>%
ggplot(aes(Fecha, pib_pc)) +
geom_line()
df.tradicional %>%
filter(Estado %in% mayores_boletos(df.tradicional)) %>%
group_by(Fecha, Estado, campus) %>%
summarise(n_boletos = sum(Venta_Estado)) %>%
ggplot(aes(Fecha, n_boletos, color = campus)) +
geom_line() +
scale_y_continuous(labels = comma) +
facet_wrap(~ Estado, scales = "free_y") +
labs(title = "Los 15 Estados que mayores ventas tuvieron entre 2015 - 2019",
subtitle = "Sorteo: Tradicional",
x = "",
y = "Boletos Vendidos",
color = "Campus")
df.aventurate %>%
ggplot(aes(log(Pib_perCap_aven), log(Venta_Estado))) +
geom_point() +
geom_smooth(method = "lm")
df.aventurate %>%
select(Venta_Estado, pib_pc, campus) %>%
mutate(campus = if_else(campus == "Si", 1, 0)) %>%
rename(n_boletos = Venta_Estado, pib_pc) %>%
cor() %>%
ggcorrplot(ggtheme = theme_light(),
lab = TRUE,
colors = c("#E46726", "white", "#6D9EC1")) +
labs(title = "Matriz de correlación")
df.aventurate %>%
select(Venta_Estado, pib_pc, campus) %>%
mutate(campus = if_else(campus == "Si", 1, 0)) %>%
rename(n_boletos = Venta_Estado) %>%
cor() %>%
ggcorrplot(ggtheme = theme_light(),
lab = TRUE,
colors = c("#E46726", "white", "#6D9EC1")) +
labs(title = "Matriz de correlación")
df.aventurate %>%
ggplot(aes(pib_pc, Venta_Estado)) +
geom_point() +
geom_smooth(method = "lm")
df.aventurate %>%
ggplot(aes(log(pib_pc), log(Venta_Estado))) +
geom_point() +
geom_smooth(method = "lm")
df.global
library(lubridate)
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
group_by(Fecha, Sorteo) %>%
summarise(min_fecha = min(Fecha))
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
group_by(Fecha, Sorteo) %>%
summarise(min_pib_pc = min(pib_pc))
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
group_by(Fecha, Sorteo) %>%
summarise(min_pib_pc = pib_pc)
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
group_by(Fecha, Sorteo) %>%
summarise(min_pib_pc = pib_pc,
max_pib_pc = pib_pc)
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
filter(Fecha == min(Fecha), Fecha == max(Fecha))
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
filter(Fecha == min(Fecha))
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
filter(Fecha %in% c(min(Fecha), max(Fecha)))
df.global %>%
mutate(Sorteo = str_remove(Sorteo, "\\d+")) %>%
filter(Fecha %in% c(min(Fecha), max(Fecha))) %>% View()
df.global %>%
group_by(Fecha, Estado) %>%
summarise(es = if_else(n() > 1, min(pib_pc), 0))
df.global %>%
group_by(Estado, Sorteo) %>%
filter(Fecha == min(Fecha))
df.global %>%
group_by(Estado, Sorteo, Fecha) %>%
filter(Fecha == min(Fecha))
df.global %>%
group_by(Estado, Sorteo, Fecha) %>%
filter(Fecha == min(Fecha)) %>% View()
df.aventurate
df.aventurate %>%
filter(Fecha == min(Fecha))
df.aventurate %>%
filter(Fecha == min(Fecha), Fecha == max(Fecha))
df.aventurate %>%
filter(Fecha %in% c(min(Fecha), max(Fecha)))
df.aventurate
df.aventurate %>%
ggplot(aes(log(pib_pc), log(Venta_Estado))) +
geom_point() +
facet_wrap(~ Estado, scales = "free_y")
df.aventurate %>%
distinct(Estado)
df.aventurate %>%
distinct(Estado) %>%
pull(Estado)
df.aventurate %>%
distinct(Estado) %>%
pull(Estado) %>%
sample(n = 10)
df.aventurate %>%
distinct(Estado) %>%
pull(Estado) %>%
sample()
edos <- df.aventurate %>%
distinct(Estado) %>%
pull(Estado)
df.aventurate %>%
filter(Estado %in% sample(edos, size = 10))
df.aventurate %>%
filter(Estado %in% sample(edos, size = 10)) %>%
ggplot(aes(log(pib_pc), log(Venta_Estado))) +
geom_point() +
facet_wrap(~ Estado, scales = "free_y")
df.aventurate %>%
filter(Estado %in% sample(edos, size = 10)) %>%
ggplot(aes(log(pib_pc), log(Venta_Estado))) +
geom_point() +
facet_wrap(~ Estado, scales = "free_y")
