abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line(color = "darkolivegreen4") +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile")
?aes
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
ggplot(aes(date_aux, n, colour = capital)) +
geom_line(color = "darkolivegreen4") +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile")
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line(color = "darkolivegreen4") +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile")
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup()
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line() +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile")
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
filter(!is.na(capital)) %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line() +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile")
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
filter(!is.na(capital)) %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line() +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile") +
theme(legend.position = "bottom")
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
filter(!is.na(capital)) %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line() +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en la CDMX a través del tiempo?",
subtitle = "Número de abortos mensuales",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile",
color = "") +
theme(legend.position = "bottom")
abortos_data %>%
filter(!is.na(fingreso), year >= 2016) %>%
mutate(date_aux = dmy(paste0("01-", month, "-", year)),
alc_o_municipio = if_else(alc_o_municipio == "La Magdalena Contreras", "Magdalena Contreras", alc_o_municipio)) %>%
group_by(date_aux, capital) %>%
count() %>%
ungroup() %>%
filter(!is.na(capital)) %>%
ggplot(aes(date_aux, n, color = capital)) +
geom_line() +
geom_vline(xintercept = dmy("01-12-2018"), linetype = "dotted") +
scale_y_continuous(labels = scales::label_comma()) +
labs(x = "",
y = "# de abortos",
title = "¿Cómo ha cambiado el número de abortos en México a través del tiempo?",
subtitle = "Número de abortos mensuales, CDMX vs resto de la República",
caption = "Fuente: https://www.semujeres.cdmx.gob.mx/ile",
color = "") +
theme(legend.position = "bottom")
library(tidyverse)
library(readxl)
library(janitor)
library(skimr)
library(lubridate)
library(stringr)
library(scales)
library(ggtext)
theme_set(theme_light())
ruta <- "Documents/itam/Curso_R/"
diccionario_data <- read_csv(paste0(ruta, "Diccionario de datos ILE.csv")) %>%
clean_names()
abortos_data <- read_csv(paste0(ruta, "Int_Leg_Emb.csv")) %>%
clean_names() %>%
mutate(across(where(is.character), str_to_title),
clues_hospital = str_to_upper(clues_hospital),
year = year(fingreso),
month = month(fingreso),
clues_hospital = as_factor(clues_hospital),
capital = if_else(entidad == "Ciudad De Mexico", "Capital", "Provincia"))
knitr::opts_chunk$set(echo = TRUE)
muetra1 <- rnorm(10000, mean = 13000, sd = 800)
muestra2 <- rnorm(10000, mean = 8000, sd = 600)
t.test(muestra1, muestra2)
muestra1 <- rnorm(10000, mean = 13000, sd = 800)
muestra2 <- rnorm(10000, mean = 8000, sd = 600)
t.test(muestra1, muestra2)
hombres <- rnorm(10000, mean = 13000, sd = 800)
mujeres <- rnorm(10000, mean = 8000, sd = 600)
t.test(muestra1, muestra2)
hombres <- rnorm(10000, mean = 13000, sd = 800)
mujeres <- rnorm(10000, mean = 8000, sd = 600)
t.test(hombres, mujeres)
?t.test
hombres <- rnorm(100, mean = 13000, sd = 800)
mujeres <- rnorm(100, mean = 8000, sd = 600)
t.test(hombres, mujeres)
t.test(hombres, mujeres, alternative = c("two.sided"))
hombres <- rnorm(100, mean = 8000, sd = 800)
mujeres <- rnorm(100, mean = 8000, sd = 600)
t.test(hombres, mujeres, alternative = c("two.sided"))
t.test(hombres, mujeres, alternative = c("greater"))
hombres <- rnorm(100, mean = 8500, sd = 800)
mujeres <- rnorm(100, mean = 8000, sd = 800)
t.test(hombres, mujeres, alternative = c("greater"), var.equal = TRUE)
?stats
library(help = "stats")
library(tidyverse)
library(skimr)
library(normtest)
library(nortest)
library(MASS)
library(car)
library(moments)
ruta <- "~/Documents/itam/Tesis_git/"
setwd(ruta)
data_modelo <- readRDS(file = "Output/data_modelo.rds")
df.aventurate <- data_modelo[[1]]
df.educativo <- data_modelo[[2]] %>%
na.omit()
df.sueno <- data_modelo[[3]]
df.tradicional <- data_modelo[[4]]
df.global <- data_modelo[[5]]
data_modelo[[1]]
mod_log_log <- function(df){
df %>%
mutate(campus = if_else(campus == "Si", 1, 0),
campus = as.factor(campus)) %>%
lm(log(Venta_Estado) ~ log(pib_pc), data = .)
}
#Aventurate
aven1 <- mod_log_log(df.aventurate)
theme_set(theme_light())
autoplot(aven1)
#Aventurate
aven1 <- mod_log_log(df.aventurate)
autoplot(aven1)
jb.norm.test(aven1$residuals)
autoplot(aven1)
summary(aven1)
autoplot(aven1)
library(DataExplorer)
autoplot(aven1)
install.packages("gglm")
library(gglm)
gglm(aven1)
gglm(aven1) +
theme_light()
autoplot(aven1)
library(ggfortify)
autoplot(aven1)
autoplot(aven1) +
theme_light()
theme_set(theme_light())
#Educativo
educ1 <- mod_log_log(df.educativo)
autoplot(educ1)
#Mi sueño
suen1 <- mod_log_log(df.sueno)
autoplot(suen1)
#Mi sueño
suen1 <- mod_log_log(df.sueno)
autoplot(suen1)
mod1_suen <- lm(log(Venta_Estado) ~ log(pib_pc), data = df.sueno)
boxcox(mod1_suen)
mod1_suen_trans <- lm(log((Venta_Estado)^(1/2)) ~ log(pib_pc), data = df.sueno)
plot(mod1_suen_trans)
hist(mod1_suen_trans$residuals)
mod_sq <- function(df){
df %>%
mutate(campus = if_else(campus == "Si", 1, 0),
campus = as.factor(campus)) %>%
lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = .)
}
mod <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.aventurate)
summary(mod)
b <- boxcox(mod)
lambda <- b$x # lambda values
lik <- b$y # log likelihood values for SSE
bc <- cbind(lambda, lik) # combine lambda and lik
sorted_bc <- bc[order(-lik),] # values are sorted to identify the lambda value for the maximum log likelihood for obtaining minimum SSE
head(sorted_bc, n = 10)
mod_t <- lm(Venta_Estado^(-0.10) ~ pib_pc + I(pib_pc ^ 2), data = df.aventurate)
plot(mod_t$fitted.values, rstandard(mod_t)) # raw residuals vs fitted values
summary(mod_t)
hist(mod_t$residuals)
qqPlot(rstandard(mod_t))
skewness(mod_t$residuals)
kurtosis(mod_t$residuals)
adj_rsq1 <- summary(mod)$adj.r.squared
adj_rsq2 <- summary(mod_t)$adj.r.squared
cat("Adjusted R-Square (before transformation):", adj_rsq1, "Adjusted R-Square (after transformation):", adj_rsq2, sep = "\n")
original <- mod$fitted.values
after_transformation <- mod_t$fitted.values
back_transformation <- mod_t$fitted.values^(-10)
fittedvalues <- data.frame(original, after_transformation, back_transformation)
head(fittedvalues, n = 10)
jb.norm.test(rstandard(mod_t)) #Segun la prueba ya se distribuye normal
head(sorted_bc, n = 10)
sorted_bc[1,1]
round(sorted_bc[1,1],2)
bxcx <- function(modelo, df){
b <- boxcox(mod)
lambda <- b$x # lambda values
lik <- b$y # log likelihood values for SSE
bc <- cbind(lambda, lik) # combine lambda and lik
sorted_bc <- bc[order(-lik),] # values are sorted to identify the lambda    value for the maximum log likelihood for obtaining minimum SSE
lambda_selection <- round(sorted_bc[1,1],2) # lambda value selected for making the transformation
mod_t <- lm(Venta_Estado^(lambda_selection) ~ pib_pc + I(pib_pc^2), data = df)
return(mod_t)
}
round(sorted_bc[1,1],2)
boxcox_model <- bxcx(trad1, df.tradicional)
hist(boxcox_model$residuals)
autoplot(boxcox_model)
df.aventurate
df.aventurate
df.aventurate
lista07 <- read_table2("~/Documents/itam/Aplicada2/Control3/lista07.txt")
lista07 <- read_table2("~/Documents/itam/7mo_Semestre/Aplicada2/Control3/lista07.txt")
data <- lista07
data
df_bacterias <- data %>%
mutate(temp = as.factor(Temp),
acid = as.factor(Acid),
conc = as.factor(Conc))
df_bacterias
df_bacterias <- data %>%
mutate(Temp = as.factor(Temp),
Acid = as.factor(Acid),
Conc = as.factor(Conc))
df_bacterias
str(df_bacterias)
modelo <- lm(Nbact ~ Temp + Acid + Conc, data = df_bacterias, x = TRUE)
anova(modelo)
summary(modelo)
modelo$x
ruta <- "~/Documents/itam/Tesis_git/"
setwd(ruta)
data_modelo <- readRDS(file = "Output/data_modelo.rds")
df.aventurate <- data_modelo[[1]]
df.educativo <- data_modelo[[2]] %>%
na.omit()
df.sueno <- data_modelo[[3]]
df.tradicional <- data_modelo[[4]]
df.global <- data_modelo[[5]]
mod <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.tradicional)
summary(mod)
b <- boxcox(mod)
lambda <- b$x # lambda values
lik <- b$y # log likelihood values for SSE
bc <- cbind(lambda, lik) # combine lambda and lik
sorted_bc <- bc[order(-lik),] # values are sorted to identify the lambda value for the maximum log likelihood for obtaining minimum SSE
head(sorted_bc, n = 10)
df.aventurate
df.aventurate %>%
ggplot(pib_pc, Venta_Estado, group = campus) +
geom_line()
df.aventurate
df.aventurate %>%
ggplot(pib_pc, Venta_Estado, group = campus) +
geom_line()
df.aventurate %>%
ggplot(pib_pc, Venta_Estado) +
geom_line()
library(tidyverse)
df.aventurate
df.aventurate %>%
ggplot(aes(pib_pc, Venta_Estado, group = campus)) +
geom_line()
df.aventurate %>%
ggplot(aes(pib_pc, Venta_Estado, colour = campus)) +
geom_line()
mod_t <- lm(Venta_Estado^(0.18) ~ pib_pc + I(pib_pc ^ 2), data = df.tradicional)
plot(mod_t$fitted.values, rstandard(mod_t)) # raw residuals vs fitted values
summary(mod_t)
hist(mod_t$residuals)
qqPlot(rstandard(mod_t))
skewness(mod_t$residuals)
kurtosis(mod_t$residuals)
mod_t <- lm(Venta_Estado^(0.181818) ~ pib_pc + I(pib_pc ^ 2), data = df.tradicional)
plot(mod_t$fitted.values, rstandard(mod_t)) # raw residuals vs fitted values
summary(mod_t)
hist(mod_t$residuals)
qqPlot(rstandard(mod_t))
skewness(mod_t$residuals)
df.aventurate %>%
ggplot(aes(pib_pc, Venta_Estado, group = campus)) +
geom_point()
ruta <- "~/Documents/itam/Tesis_git/"
setwd(ruta)
data_modelo <- readRDS(file = "Output/data_modelo.rds")
df.aventurate <- data_modelo[[1]]
df.aventurate %>%
ggplot(aes(pib_pc, Venta_Estado, group = campus)) +
geom_point()
df.aventurate %>%
ggplot(aes(pib_pc, Venta_Estado, colour = campus)) +
geom_point()
df.educativo <- data_modelo[[2]] %>%
na.omit()
df.sueno <- data_modelo[[3]]
df.tradicional <- data_modelo[[4]]
df.global <- data_modelo[[5]]
mod_sq <- function(df){
df %>%
mutate(campus = if_else(campus == "Si", 1, 0),
campus = as.factor(campus)) %>%
lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = .)
}
#Aventurate
aven_sq <- mod_sq(df.aventurate)
summary(aven_sq)
hist(aven_sq$residuals)
#Educativo
educ_sq <- mod_sq(df.educativo)
#Mi sueño
suen_sq <- mod_sq(df.sueno)
#Tradicional
trad_sq <- mod_sq(df.tradicional)
boxcox_model <- bxcx(aven_sq, df.aventurate)
bxcx <- function(modelo, df){
b <- boxcox(mod)
lambda <- b$x # lambda values
lik <- b$y # log likelihood values for SSE
bc <- cbind(lambda, lik) # combine lambda and lik
sorted_bc <- bc[order(-lik),] # values are sorted to identify the lambda    value for the maximum log likelihood for obtaining minimum SSE
lambda_selection <- round(sorted_bc[1,1],2) # lambda value selected for making the transformation
mod_t <- lm(Venta_Estado^(lambda_selection) ~ pib_pc + I(pib_pc^2), data = df)
return(mod_t)
}
boxcox_model <- bxcx(aven_sq, df.aventurate)
bxcx <- function(modelo, df){
b <- boxcox(modelo)
lambda <- b$x # lambda values
lik <- b$y # log likelihood values for SSE
bc <- cbind(lambda, lik) # combine lambda and lik
sorted_bc <- bc[order(-lik),] # values are sorted to identify the lambda    value for the maximum log likelihood for obtaining minimum SSE
lambda_selection <- round(sorted_bc[1,1],2) # lambda value selected for making the transformation
mod_t <- lm(Venta_Estado^(lambda_selection) ~ pib_pc + I(pib_pc^2), data = df)
return(mod_t)
}
boxcox_model <- bxcx(aven_sq, df.aventurate)
mod_sq <- function(df){
df %>%
mutate(campus = if_else(campus == "Si", 1, 0),
campus = as.factor(campus)) %>%
lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df)
}
#Aventurate
aven_sq <- mod_sq(df.aventurate)
mod_sq <- function(df){
df %>%
mutate(campus = if_else(campus == "Si", 1, 0),
campus = as.factor(campus)) %>%
lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = .)
}
#Aventurate
aven_sq <- mod_sq(df.aventurate)
aven_sq <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.aventurate)
boxcox_model <- bxcx(aven_sq, df.aventurate)
plot(boxcox_model)
aventurate_sq <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.aventurate)
aventurate_sq <- bxcx(aventurate_sq, df.aventurate)
autoplot(aventurate_sq)
tradicional_sq <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.tradicional)
tradicional_sq <- bxcx(tradicional_sq, df.tradicional)
autoplot(tradicional_sq)
educativo_sq <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.educativo)
autoplot(educativo_sq)
educativo_sq <- bxcx(educativo_sq, df.educativo)
autoplot(educativo_sq)
autoplot(educativo_sq)
sueno_sq <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.sueno)
sueno_sq <- bxcx(sueno_sq, df.sueno)
autoplot(sueno_sq)
autoplot(sueno_sq)
jb.norm.test(sueno_sq$residuals)
jb.norm.test(educativo_sq$residuals)
jb.norm.test(aventurate_sq$residuals)
jb.norm.test(educativo_sq$residuals)
jb.norm.test(educativo_sq$residuals)
jb.norm.test(educativo_sq$residuals)
jb.norm.test(educativo_sq$residuals)
jb.norm.test(sueno_sq$residuals)
autoplot(sueno_sq)
#Sorteo Tradicional
tradicional_sq <- NULL
#Sorteo Tradicional
tradicional_sq <- lm(Venta_Estado ~ pib_pc + I(pib_pc ^ 2), data = df.tradicional)
tradicional_sq <- bxcx(tradicional_sq)
tradicional_sq <- bxcx(tradicional_sq, df.tradicional)
autoplot(tradicional_sq)
hist(tradicional_sq$residuals)
hist(sueno_sq$residuals)
hist(educativo_sq$residuals)
hist(aventurate_sq$residuals)
?jb.norm.test
shapiro.test(sueno_sq$residuals)
?shapiro.test
shapiro.test(rnorm(100, mean = 5, sd = 3))
shapiro.test(runif(100, min = 2, max = 4))
autoplot(sueno_sq)
autoplot(sueno_sq)
mod_log_log <- function(df){
df %>%
mutate(campus = if_else(campus == "Si", 1, 0),
campus = as.factor(campus)) %>%
lm(log(Venta_Estado) ~ log(pib_pc), data = .)
}
#Aventurate
aven1 <- mod_log_log(df.aventurate)
autoplot(aven1) +
theme_light()
autoplot
autoplot(aven1)
#Educativo
educ1 <- mod_log_log(df.educativo)
autoplot(educ1)
#Mi sueño
suen1 <- mod_log_log(df.sueno)
autoplot(suen1)
#Tradicional
trad1 <- mod_log_log(df.tradicional)
autoplot(trad1)
jb.norm.test(trad1$residuals)
ad.test(trad1$residuals)
